# Copyright 2017 Descartes Labs.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#!/usr/bin/env python
from __future__ import print_function

import json
import argparse

import descarteslabs as dl

if __name__ == "__main__":

    parser = argparse.ArgumentParser()

    parser.add_argument('command', choices=['find', 'shape', 'prefix', 'placetypes'],
                        help='The action to take.')
    parser.add_argument('argument', nargs='?')

    parser.add_argument('-url', help='The url of the service')
    parser.add_argument('-placetype', default=None, help='The placetype of the response')
    parser.add_argument('-geom', default=None,
                        choices=['low', 'medium', 'high'],
                        help='Resolution of shape')
    parser.add_argument("-output", default='geojson')

    args = parser.parse_args()

    places = dl.places

    if args.url:
        places.url = args.url

    kwargs = {}

    if args.command == 'placetypes':
        placetypes = places.placetypes()

        print(json.dumps(placetypes))

    if args.command == 'models':
        sources = places.sources()

        print(json.dumps(sources))

    if args.command == 'find':

        if args.placetype:
            kwargs['placetype'] = args.placetype

        find = places.find(args.argument, **kwargs)

        print(json.dumps(find))

    if args.command == 'shape':

        if args.geom:
            kwargs['geom'] = args.geom

        shape = places.shape(args.argument, **kwargs)

        print(json.dumps(shape))

    if args.command == 'prefix':

        if args.geom:
            kwargs['geom'] = args.geom
        if args.output:
            kwargs['output'] = args.output
        if args.placetype:
            kwargs['placetype'] = args.placetype

        prefix = places.prefix(args.argument, **kwargs)

        print(json.dumps(prefix))
